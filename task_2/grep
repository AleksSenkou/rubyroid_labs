#!/usr/bin/env ruby
require "find"
require "zlib"

def a_or_e_option(arg_for_comp)
  puts "Option #{ARGV[0]}"

  (arg_for_comp + 1).upto(ARGV.count - 1) do |which|
    file = ARGV[which]
    next if !File.exists?(file)
    puts '-' * 40
    puts "File '#{file}', symbol #{ARGV[arg_for_comp]}:"
    file_lines = File.readlines(file)
    file_lines.each_with_index do |line, num|
      if /#{ARGV[arg_for_comp]}/.match line
        puts ARGV[0] == '-A' ? file_lines[num - ARGV[1].to_i..num + ARGV[1].to_i] : line 
      end
    end
  end
end  

def r_option
  puts "Option #{ARGV[0]}"

  files = []
  Find.find("#{ARGV[2]}") { |path| files << path }
  files.each do |file|
    next if File.directory?(file)
    puts '-' * 40
    puts "File '#{file}', symbol #{ARGV[1]}:"
    file_lines = File.readlines(file)
    file_lines.each_with_index do |line, num|
      puts line if /#{ARGV[1]}/.match line
    end
  end
end

def z_option
  puts "Option #{ARGV[0]}"

  

  (2).upto(ARGV.count - 1) do |which|
    file = ARGV[which]
    next if !File.exists?(file)
    puts '-' * 40
    puts "File '#{file}', symbol #{ARGV[1]}:"
    unpack = Zlib::GzipReader.open(file)
    file_lines = unpack.readlines
    file_lines.each_with_index do |line, num|
      if /#{ARGV[1]}/.match line
        puts ARGV[0] == '-A' ? file_lines[num - ARGV[1].to_i..num + ARGV[1].to_i] : line 
      end
    end
  end
end

exit if ARGV.count < 3 

case ARGV[0]
  when '-A'
    a_or_e_option(2)
  when "-e"
    a_or_e_option(1)
  when "-R"
    r_option
  when "-z"
    z_option
  else
    puts "No such command"
end